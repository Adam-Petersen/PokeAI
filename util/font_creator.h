#ifndef SRC_FONT
#define SRC_FONT
#include <map>
#include <string>
#include "common.h"
#include "../map/tile.h"
#include "../map/block.h"

class FontCreator {
 public:
  FontCreator();
  std::vector<Block*> getBlocksFromText(std::string name);
  Tile* getCharTile(char c);
  int getNameSize(std::string name);
 private:
  uint8_t* font;
  std::map<char, Tile*> char_map;
  void initCharMap();
  bool charExists(char c);
  Tile** getEmptyTiles();

  const uint8_t font_data[296] {
    0x38, 0x6C, 0xC6, 0xC6, 0xFE, 0xC6, 0xC6, 0x00,	// Char 000 (A)
    0xFC, 0xC6, 0xC6, 0xFC, 0xC6, 0xC6, 0xFC, 0x00,	// Char 001 (B)
    0x3C, 0x66, 0xC0, 0xC0, 0xC0, 0x66, 0x3C, 0x00,	// Char 002 (C)
    0xF8, 0xCC, 0xC6, 0xC6, 0xC6, 0xCC, 0xF8, 0x00,	// Char 003 (D)
    0xFE, 0xC0, 0xC0, 0xFC, 0xC0, 0xC0, 0xFE, 0x00,	// Char 004 (E)
    0xFE, 0xC0, 0xC0, 0xFC, 0xC0, 0xC0, 0xC0, 0x00,	// Char 005 (F)
    0x3E, 0x60, 0xC0, 0xCE, 0xC6, 0x66, 0x3E, 0x00,	// Char 006 (G)
    0xC6, 0xC6, 0xC6, 0xFE, 0xC6, 0xC6, 0xC6, 0x00,	// Char 007 (H)
    0xFC, 0x30, 0x30, 0x30, 0x30, 0x30, 0xFC, 0x00,	// Char 008 (I)
    0x06, 0x06, 0x06, 0x06, 0x06, 0xC6, 0x7C, 0x00,	// Char 009 (J)
    0xC6, 0xCC, 0xD8, 0xF0, 0xF8, 0xDC, 0xCE, 0x00,	// Char 010 (K)
    0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xFC, 0x00,	// Char 011 (L)
    0xC6, 0xEE, 0xFE, 0xFE, 0xD6, 0xC6, 0xC6, 0x00,	// Char 012 (M)
    0xC6, 0xE6, 0xF6, 0xFE, 0xDE, 0xCE, 0xC6, 0x00,	// Char 013 (N)
    0x7C, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0x7C, 0x00,	// Char 014 (O)
    0xFC, 0xC6, 0xC6, 0xC6, 0xFC, 0xC0, 0xC0, 0x00,	// Char 015 (P)
    0x7C, 0xC6, 0xC6, 0xC6, 0xDE, 0xCC, 0x7A, 0x00,	// Char 016 (Q)
    0xFC, 0xC6, 0xC6, 0xCE, 0xF8, 0xDC, 0xCE, 0x00,	// Char 017 (R)
    0x7C, 0xC6, 0xC0, 0x7C, 0x06, 0xC6, 0x7C, 0x00,	// Char 018 (S)
    0xFC, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x00,	// Char 019 (T)
    0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0x7C, 0x00,	// Char 020 (U)
    0xC6, 0xC6, 0xC6, 0xEE, 0x7C, 0x38, 0x10, 0x00,	// Char 021 (V)
    0xC6, 0xC6, 0xD6, 0xFE, 0xFE, 0xEE, 0xC6, 0x00,	// Char 022 (W)
    0xC6, 0xEE, 0x7C, 0x38, 0x7C, 0xEE, 0xC6, 0x00,	// Char 023 (X)
    0xCC, 0xCC, 0xCC, 0x78, 0x30, 0x30, 0x30, 0x00,	// Char 024 (Y)
    0xFE, 0x0E, 0x1C, 0x38, 0x70, 0xE0, 0xFE, 0x00,	// Char 025 (Z)
    0x38, 0x4C, 0xC6, 0xC6, 0xC6, 0x64, 0x38, 0x00,	// Char 026 (0)
    0x30, 0x70, 0x30, 0x30, 0x30, 0x30, 0xFC, 0x00,	// Char 027 (1)
    0x7C, 0xC6, 0x0E, 0x3C, 0x78, 0xE0, 0xFE, 0x00,	// Char 028 (2)
    0x7E, 0x0C, 0x18, 0x3C, 0x06, 0xC6, 0x7C, 0x00,	// Char 029 (3)
    0x1C, 0x3C, 0x6C, 0xCC, 0xFE, 0x0C, 0x0C, 0x00,	// Char 030 (4)
    0xFC, 0xC0, 0xFC, 0x06, 0x06, 0xC6, 0x7C, 0x00,	// Char 031 (5)
    0x3C, 0x60, 0xC0, 0xFC, 0xC6, 0xC6, 0x7C, 0x00,	// Char 032 (6)
    0xFE, 0xC6, 0x0C, 0x18, 0x30, 0x30, 0x30, 0x00,	// Char 033 (7)
    0x78, 0xC4, 0xE4, 0x78, 0x9E, 0x86, 0x7C, 0x00,	// Char 034 (8)
    0x7C, 0xC6, 0xC6, 0x7E, 0x06, 0x0C, 0x78, 0x00,	// Char 035 (9)
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	// Char 036 ()
  };

  uint8_t chars[37] = {'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', ' '};
  Tile* default_tile;

};



#endif